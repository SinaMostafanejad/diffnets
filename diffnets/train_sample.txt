do_em : boolean,
    Option to use the self-supervised expectation maximization scheme.

em_bounds : np.ndarray, shape=(n_variants,2)
    A range that sets what fraction of conformations you expect a variant
    to have biochemical property. Rank order of variants is more important
    than the range itself. Order of variants should reflect each variants
    value in the "indicators" dir files.

em_batch_size :  int
   Number of examples that have their classification labels updated in a
   single batch of expectation maximization.

nntype : str
    Str that specifies the neural net object to be used.
    nnutils.sae, nnutils.split_sae, nnutils.ae, nnutils.split_ae

lr : float
    Learning rate.

n_latent : int
    number of latent variables

n_epochs : int
    Number of times to train the neural network on data points

data_dir : str
    Path to directory that contains a whitening matrix (wm.npy), an
    unwhitening matrix (uwm.npy), and the average center of mass of each
    atom across all trajectories (cm.npy). Additionally has an "indicators"
    dir and an "aligned_xtcs" dir that correspond to each other. i.e. every
    frame from an xtc has a corresponding "indicator" value which indicates
    which variant the frame came from.

act_map : np.ndarray, shape=(n_variants,)
    Initial classification labels to give each variant. The 0th index
    corresponds to all frames with "indicator" values of 0. The 1st index
    corresponds to all frames with "indicator" values of 1 and so on.
    e.g. if act_map=[0,0,1,1] then whatever xtc frames have indicator values
    of 0 or 1 will get classification labels of 0 and xtc frames with indicator
    values of 2 or 3 will get classification labels of 1.

batch_size : int
   Number of examples for neural network to look at between
   each update of the weights.

batch_output_freq : int
   Frequency to write out updates.

epoch_output_freq : int
   Frequency to write out updates.

test_batch_size : int
    Batch size when testing neural network on validation set.

frac_test : float between 0 and 1
    Fraction of examples that the neural network will be evaluated on
    instead of trained on.

subsample : int
   Subsample every nth data frame in a given epoch of training. Across all
   epochs it is still possible for the training to have seen every example.

outdir : str
    Path to where all of the training output will go.

hidden_layer_size: list
    List where length of list indicates the number of desired hidden layers
    and each value indicates the number of nodes in the hidden layer.

close_inds_fn: str
    Path to np.array of atom indices (relative to master.pdb) that indicates
    which atoms should go into the classification task. ONLY USE WITH SPLIT
    AUTOENCODER ARCHITECTURES.
